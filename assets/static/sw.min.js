function plausible(e,t){const n={n:e,u:self.location.toString(),d:"gawvertretung.florian-raediker.de",r:null};return t&&t.meta&&(n.m=JSON.stringify(t.meta)),t&&t.props&&(n.p=JSON.stringify(t.props)),fetch("https://plausible.io/api/event",{method:"POST",headers:{"Content-Type":"text/plain"},body:JSON.stringify(n)}).catch(e=>console.error("reporting error failed",e))}function reportError(e,t=null){console.error("reporting error",e,t);try{var n=e.name,o=(null==t?void 0:t.message)||e.message,s=e.description,a=e.number,r=(null==t?void 0:t.filename)||e.fileName,i=(null==t?void 0:t.lineno)||e.lineNumber,l=(null==t?void 0:t.colno)||e.columnNumber;plausible("JavaScript Error (Service Worker)",{props:{[(n||"Generic Error")+": "+o]:((null==t?void 0:t.stack)||e.stack)+" - "+r+":"+i+":"+l+" "+s+" "+a}})}catch(e){console.error("reporting error failed",e)}}self.addEventListener("error",e=>reportError(e.error,e)),self.addEventListener("unhandledrejection",e=>reportError(e.reason));const CACHE="gawvertretung-v1",planPaths=["/students/","/teachers/"],assetsToCache=["/assets/style/main.css","/assets/style/main-dark.css","/assets/style/substitutions.css","/assets/style/substitutions-dark.css","/assets/js/substitutions.min.js","/assets/js/dark-theme.min.js","/assets/js/timetables.min.js","/assets/ferien/script.min.js","/assets/ferien/style.css","/favicon-32x32.png","/android-chrome-192x192.png"];self.addEventListener("install",e=>{e.waitUntil(caches.open(CACHE).then(n=>Promise.all([Promise.all(planPaths.map(t=>fetch(t+"?all&sw").then(e=>n.put(t,e))))])))}),self.addEventListener("activate",e=>{e.waitUntil(caches.open(CACHE).then(n=>{n.keys().then(e=>Promise.all(e.map(e=>{var t=new URL(e.url);if(!assetsToCache.includes(t.pathname)&&!planPaths.includes(t.pathname))return console.log("cache: delete old",e),n.delete(e)})))}))}),self.addEventListener("fetch",o=>{const n=new URL(o.request.url);console.log("requested",o.request.url,n.pathname),"/"===n.pathname?o.respondWith(Response.redirect("/students/")):planPaths.includes(n.pathname)?o.respondWith(new Promise((e,t)=>{console.log("fetching",o.request),fetch(o.request).then(t=>{console.log("fetch successful",o.request.url),e(t.clone()),caches.open(CACHE).then(e=>e.put(n.pathname,t))},t)}).catch(()=>caches.open(CACHE).then(e=>e.match(n.pathname,{ignoreSearch:!0}).then(e=>e||(console.log("no match for",o.request),Promise.reject("no-match")))))):assetsToCache.includes(n.pathname)?o.respondWith(new Promise(n=>caches.open(CACHE).then(t=>t.match(o.request).then(e=>e?(console.log("cache has up-to-date response for",o.request.url),void n(e)):void fetch(o.request).then(async e=>{console.log("cache is missing up-to-date response, fetching for",o.request.url),n(e.clone()),await t.delete(o.request,{ignoreSearch:!0,ignoreVary:!0}).then(e=>console.log("deleted",e,o.request.url)),console.log("putting in cache:",o.request.url),await t.put(o.request,e)}).catch(()=>{n(t.match(o.request,{ignoreSearch:!0,ignoreVary:!0}))}))))):console.log("not using SW for request")}),self.addEventListener("push",async e=>{if(e.data){var t=e.data.json();if("generic_message"===t.type)e.waitUntil(self.registration.showNotification(t.title,{body:t.body||"",icon:"android-chrome-512x512.png",badge:"monochrome-96x96.png",lang:"de",data:{type:"generic_message"}}));else{let r=t.plan_id,i=t.affected_groups_by_day;console.log("affectedGroups",i);for(var n of Object.values(i))n.groups=new Set(n.groups);let l=Date.now()/1e3;e.waitUntil(self.registration.getNotifications().then(e=>{for(var n of e)if(n.data&&n.data.plan_id===r){for(let[t,e]of Object.entries(n.data.affected_groups_by_day))console.log("expiryTime, currentTimestamp:",t,l),t>l&&(console.log("add",e.groups),t in i?(console.log("already in affectedGroups"),e.groups.forEach(e=>i[t].groups.add(e))):(console.log("new day",e),i[t]=e));n.close()}for(var t of Object.values(i))t.groups=Array.from(t.groups);let o,s;if(1===Object.keys(i).length){let e=Object.values(i)[0];o=e.name+": Neue Vertretungen",s=e.groups.join(", ")}else{o="Neue Vertretungen",s="";for(var a of Object.values(i))s+=a.name+": "+a.groups.join(", ")+"\n"}e={body:s,icon:"android-chrome-512x512.png",badge:"monochrome-96x96.png",lang:"de",vibrate:[300,100,400],data:{type:"subs_update",plan_id:r,url:new URL("/"+r+"/?source=Notification",self.location.origin).href,affected_groups_by_day:i}};self.registration.showNotification(o,e),plausible("Notification",{props:{[r]:"Received"}})}))}}else e.waitUntil(Promise.all([self.registration.showNotification("Neue Benachrichtigung",{icon:"android-chrome-512x512.png",badge:"monochrome-96x96.png",lang:"de"}),plausible("Notification",{props:{other:"Received, but without Payload"}})]))}),self.addEventListener("notificationclick",s=>{s.notification.close(),"subs_update"===s.notification.data.type&&s.waitUntil(Promise.all([self.clients.matchAll().then(function(e){var t,n=new URL(s.notification.data.url);for(t of e){var o=new URL(t.url);if(o.origin+o.pathname===n.origin+n.pathname&&"focus"in t)return t.focus()}if(self.clients.openWindow)return self.clients.openWindow(s.notification.data.url)}),self.registration.getNotifications().then(e=>{e.forEach(e=>{null!=e.data&&e.data.plan_id===s.notification.data.plan_id&&e.close()})}),plausible("Notification",{props:{[s.notification.data.plan_id]:"Clicked"}})]))});
//# sourceMappingURL=sw.min.js.map
