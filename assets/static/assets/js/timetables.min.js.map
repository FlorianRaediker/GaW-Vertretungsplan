{"version":3,"sources":["timetables.js"],"names":["selection","document","getElementById","value","substitutionPlanType","window","location","pathname","split","timetables","JSON","parse","localStorage","getItem","timetablesBlock","substitutions","substitutionsBox","getElementsByClassName","tableBody","querySelector","dayName","textContent","groupName","groupSubstitutions","newGroupSubstitutions","groupLetterPart","groupNumberPart","affectedGroups","match","toUpperCase","letter","push","matchingSelections","s","g","includes","l","Object","assign","row","children","lesson","groupNameCell","teacherName","lessonString","parseInt","console","log","timetablesBlockTemplate","timetableTemplate","appendChild","content","timetablesContainer","setRelevant","input","markRelevant","dataset","weekdayName","teacher","classList","add","remove","sUpper","Array","fill","timetable","firstElementChild","cloneNode","querySelectorAll","forEach","e","innerText","addEventListener","shareTimetableBlock","hidden","linkInput","copyButton","timetableStr","day","length","substr","repeat","URL","btoa","origin","href","target","select","copyTimeout","resetButton","clearTimeout","setTimeout","title","navigator","clipboard","writeText","then","plausible","catch","tbody","lessonNum","createElement","th","weekday","cell","id","setAttribute","oldvalue","setItem","stringify","focusNextLesson","currentInput","direction","blur","focus","focusNextWeekday","key","shiftKey","preventDefault","selectionStart","selectionEnd","maxLength"],"mappings":"CAAA,wBAAA,MAAAA,EAAAC,SAAAC,eAAA,kBAAAC,MACAC,EAAAC,OAAAC,SAAAC,SAAAC,MAAA,IAAA,GAAA,GAEA,IAAAC,EACA,IACAA,EAAAC,KAAAC,MAAAN,OAAAO,aAAAC,QAAAT,EAAA,gBAEAK,EADAA,GACA,GACA,MACAA,EAAA,GAGA,MAAAK,EAAAb,SAAAC,eAAA,oBACA,GAAAF,EAAA,CACA,MAAAe,EAAA,GACA,IAAA,IAAAC,KAAAf,SAAAgB,uBAAA,qBAAA,CACA,IAAAC,EAAAF,EAAAG,cAAA,8BACA,GAAAD,EAAA,CACA,MAAAE,EAAAJ,EAAAG,cAAA,aAAAE,YAEA,IAAAC,EAAA,KACAC,EAAA,CAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,IACA,SAAAC,IACA,IAAAC,EACAC,EACA,MAAAC,EAAA,GACA,IAAAC,EAAAN,EAAAM,MAAA,sBAQA,GALAH,EAFA,MAAAG,GACAF,EAAAE,EAAA,GACAA,EAAA,GAAAC,gBAEAH,EAAA,GACAJ,EAAAO,eAEA,KAAAH,EACA,GAAA,KAAAD,EACA,IAAA,IAAAK,KAAAL,EACAE,EAAAI,KAAAL,EAAAI,QAGAH,EAAAI,KAAAL,QAGAC,EAAAI,KAAAN,GAEA,IAAAO,EAAA,GACA,IAAA,IAAAC,KAAAjC,EAAAQ,MAAA,MAAA,CACAyB,EAAAA,EAAAJ,cACA,IAAA,IAAAK,KAAAP,EACA,GAAAO,EAAAC,SAAAF,GAAA,CACAD,EAAAD,KAAAE,GACA,OAIA,IAAA,IAAAA,KAAAD,EAIA,GAHAC,KAAAlB,IACAA,EAAAkB,GAAA,IAEAb,KAAAL,EAAAkB,GACA,IAAA,IAAAG,EAAA,EAAAA,EAAA,GAAAA,IACArB,EAAAkB,GAAAb,GAAAgB,GAAAC,OAAAC,OAAAvB,EAAAkB,GAAAb,GAAAgB,GAAAb,EAAAa,SAGArB,EAAAkB,GAAAb,GAAAG,EAIA,IAAA,IAAAgB,KAAArB,EAAAsB,SAAA,CACA,IAcAC,EAdAC,EAAAH,EAAApB,cAAA,eACA,IAAAwB,EACAC,EAOAA,EANA,MAAAF,GACA,MAAApB,GACAE,IACAD,EAAA,CAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,IACAD,EAAAoB,EAAArB,YACAsB,EAAAJ,EAAAC,SAAA,GAAAnB,YAAAQ,cACAU,EAAAC,SAAA,GAAAnB,cAEAsB,EAAAJ,EAAAC,SAAA,GAAAnB,YAAAQ,cACAU,EAAAC,SAAA,GAAAnB,aAEA,IAAAoB,KAAAG,EAAAhB,MAAA,UACAa,EAAAI,SAAAJ,GACA,GAAAA,GAAAA,GAAA,KACAE,KAAApB,EAAAkB,EAAA,GACAlB,EAAAkB,EAAA,GAAAE,GAAAZ,KAAAQ,GAEAhB,EAAAkB,EAAA,GAAAE,GAAA,CAAAJ,IAIA,MAAAjB,GACAE,KAGAsB,QAAAC,IAAAhC,GAEA,IAAAiC,EAAA/C,SAAAC,eAAA,6BACA,MAAA+C,EAAAhD,SAAAC,eAAA,sBACAY,EAAAoC,YAAAF,EAAAG,SACA,MAAAC,EAAAnD,SAAAC,eAAA,wBACA,SAAAmD,EAAAC,EAAAnD,EAAA,KAAAoD,GAAA,GAEApD,EADAA,GACAmD,EAAAnD,MACA,IAAAH,EAAAsD,EAAAE,QAAAxD,UACA,GAAAA,KAAAe,EAAA,CACA,IAAAkB,EAAAlB,EAAAf,GACAyD,EAAAH,EAAAE,QAAAC,YACA,GAAAA,KAAAxB,EAAA,CACAyB,EAAAvD,EAAA0B,cAEA,GAAA6B,KADAzB,EAAAA,EAAAwB,GAAAH,EAAAE,QAAAf,OAAA,IAEA,IAAA,IAAAF,KAAAN,EAAAyB,GACAH,EACAhB,EAAAoB,UAAAC,IAAA,eAEArB,EAAAoB,UAAAE,OAAA,iBAMA,IAAA,IAAA5B,KAAAjC,EAAAQ,MAAA,MAAA,CACA,IAAAsD,EAAA7B,EAAAJ,cACAiC,KAAArD,IACAA,EAAAqD,GAAA,CACAC,MAAA,IAAAC,KAAA,IACAD,MAAA,IAAAC,KAAA,IACAD,MAAA,IAAAC,KAAA,IACAD,MAAA,IAAAC,KAAA,IACAD,MAAA,IAAAC,KAAA,MAGA,MAAAC,EAAAhB,EAAAE,QAAAe,kBAAAC,WAAA,GACAf,EAAAF,YAAAe,GACAA,EAAAG,iBAAA,wBAAAC,QAAAC,GAAAA,EAAAC,UAAAtC,GACAgC,EAAA9C,cAAA,2BAAAqD,iBAAA,QAAA,KACA,MAAAC,EAAAR,EAAA9C,cAAA,0BACA,GAAAsD,EAAAC,OAAA,CACA,MAAAC,EAAAF,EAAAtD,cAAA,yBACAyD,EAAAH,EAAAtD,cAAA,wBACA,IAAA0D,EAAA,GACA,IAAA,IAAAC,EAAA,EAAAA,EAAA,EAAAA,IACA,IAAA,IAAArC,EAAA,EAAAA,EAAA,GAAAA,IAAA,CACA,IAAAiB,EAAAjD,EAAAqD,GAAAgB,GAAArC,GACAiB,GAGA,EAAAA,EAAAqB,SAEArB,EAAAA,EAAAsB,OAAA,EAAA,IAEAH,GAAAnB,EAAA,IAAAuB,OAAA,EAAAvB,EAAAqB,SANAF,GAAA,MAUAF,EAAAxE,MAAA,IAAA+E,IAAA,IAAA9E,EAAA,eAAA0D,EAAA,IAAAqB,KAAAN,GAAAxE,OAAAC,SAAA8E,QAAAC,KACAV,EAAAH,iBAAA,QAAAF,GAAAA,EAAAgB,OAAAC,UACA,IAAAC,EAAA,KACAZ,EAAAJ,iBAAA,QAAA,KACA,SAAAiB,IACA,MAAAD,GACAE,aAAAF,GACAA,EAAAG,WAAA,KACAf,EAAAjB,UAAAE,OAAA,UACAe,EAAAjB,UAAAE,OAAA,kBACAe,EAAAgB,MAAA,WACAJ,EAAA,MACA,KAGAK,UAAAC,UAAAC,UAAApB,EAAAxE,OAAA6F,KAAA,KACApB,EAAAjB,UAAAC,IAAA,UACAgB,EAAAgB,MAAA,WACAH,IACAQ,UAAA,0BACAC,MAAA,KACAtB,EAAAjB,UAAAC,IAAA,kBACAgB,EAAAgB,MAAA,0BACAH,QAGAhB,EAAAC,QAAA,OAEAD,EAAAC,QAAA,IAGA,MAAAyB,EAAAlC,EAAA9C,cAAA,SACA,IAAA,IAAAiF,EAAA,EAAAA,EAAA,GAAAA,IAAA,CACA,MAAA7D,EAAAtC,SAAAoG,cAAA,MACAF,EAAAjD,YAAAX,GACA,MAAA+D,EAAArG,SAAAoG,cAAA,MACA9D,EAAAW,YAAAoD,GACAA,EAAA/B,UAAA6B,EAAA,IACA,IAAA,IAAAG,EAAA,EAAAA,EAAA,EAAAA,IAAA,CACA,MAAAC,EAAAvG,SAAAoG,cAAA,MACA9D,EAAAW,YAAAsD,GACA,MAAAlD,EAAArD,SAAAoG,cAAA,SACAG,EAAAtD,YAAAI,GACAA,EAAAK,UAAAC,IAAA,eAAA,mBACAN,EAAAmD,GAAA,aAAA3C,EAAA,IAAAyC,EAAA,IAAAH,EACA,IAAA3C,EAAA,CAAA,SAAA,WAAA,WAAA,aAAA,WAAA8C,GACAjD,EAAAoD,aAAA,OAAA,QACApD,EAAAoD,aAAA,iBAAA,cACApD,EAAAoD,aAAA,eAAA,OACApD,EAAAoD,aAAA,cAAA,OACApD,EAAAoD,aAAA,aAAA,SACApD,EAAAoD,aAAA,eAAA,IAAAH,GAAA,KAAAH,EAAA,OAAA,QACA9C,EAAAoD,aAAA,YAAA,KACApD,EAAAoD,aAAA,gBAAAN,aAAA3C,KACAH,EAAAkB,iBAAA,QAAAF,GAAAA,EAAAgB,OAAAC,UACAjC,EAAAkB,iBAAA,QAAAF,IAEAjB,EAAAiB,EAAAgB,OAAAhB,EAAAgB,OAAA9B,QAAAmD,UAAA,GAEAtD,EAAAiB,EAAAgB,QAEAhB,EAAAgB,OAAA9B,QAAAmD,SAAArC,EAAAgB,OAAAnF,MAEAM,EAAA6D,EAAAgB,OAAA9B,QAAAxD,WACA6C,SAAAyB,EAAAgB,OAAA9B,QAAA+C,UACA1D,SAAAyB,EAAAgB,OAAA9B,QAAAf,QAAA,GAAA6B,EAAAgB,OAAAnF,MAAA0B,cACAxB,OAAAO,aAAAgG,QAAAxG,EAAA,cAAAM,KAAAmG,UAAApG,MAEA6C,EAAAE,QAAAxD,UAAA8D,EAEAR,EAAAE,QAAA+C,QAAAA,EACAjD,EAAAE,QAAAC,YAAAA,EAEAH,EAAAE,QAAAf,OAAA2D,EACA1C,EAAAjD,EAAAqD,GAAAyC,GAAAH,EAAA,GACA1C,GACAJ,EAAAnD,MAAAuD,EACAJ,EAAAE,QAAAmD,SAAAjD,EACAL,EAAAC,IAEAA,EAAAE,QAAAmD,SAAA,GAIA,SAAAG,EAAAC,EAAAC,GACA,IAAAT,EAAA1D,SAAAkE,EAAAvD,QAAA+C,SACA9D,EAAAI,SAAAkE,EAAAvD,QAAAf,QAEA,GADAA,GAAAuE,EACAvE,EAAA,EAAA,CAEA,GADA8D,IACAA,EAAA,EACA,OACA9D,EAAA,QACA,GAAA,GAAAA,EAAA,CAEA,GADA8D,IACA,GAAAA,EAEA,YADAQ,EAAAE,OAGAxE,EAAA,EAGA,OADAxC,SAAAC,eAAA,aAAA6G,EAAAvD,QAAAxD,UAAA,IAAAuG,EAAA,IAAA9D,GAAAyE,QACA,EAGA,SAAAC,EAAAJ,EAAAC,GACA,IAAAT,EAAA1D,SAAAkE,EAAAvD,QAAA+C,SACA9D,EAAAI,SAAAkE,EAAAvD,QAAAf,QAEA,OAAA,IADA8D,GAAAS,IACAT,GAAA,IACAtG,SAAAC,eAAA,aAAA6G,EAAAvD,QAAAxD,UAAA,IAAAuG,EAAA,IAAA9D,GAAAyE,QACA,GAKAf,EAAA3B,iBAAA,UAAAF,IACA,OAAAA,EAAA8C,KACA,IAAA,MACA,IAAA,QACAN,EAAAxC,EAAAgB,OAAAhB,EAAA+C,UAAA,EAAA,IACA/C,EAAAgD,iBACA,MACA,IAAA,YACAR,EAAAxC,EAAAgB,OAAA,IACAhB,EAAAgD,iBACA,MACA,IAAA,UACAR,EAAAxC,EAAAgB,QAAA,IACAhB,EAAAgD,iBACA,MACA,IAAA,YAEA,IAAAhD,EAAAgB,OAAAiC,gBACA,IAAAjD,EAAAgB,OAAAkC,cAAA,IAAAlD,EAAAgB,OAAAkC,cACAL,EAAA7C,EAAAgB,QAAA,IACAhB,EAAAgD,iBACA,MACA,IAAA,aAEAhD,EAAAgB,OAAAiC,iBAAAjD,EAAAgB,OAAAkC,cACAL,EAAA7C,EAAAgB,OAAA,IACAhB,EAAAgD,oBAIAnB,EAAA3B,iBAAA,QAAAF,IAEAA,EAAAgB,OAAAnF,MAAA4E,QAAAT,EAAAgB,OAAAmC,WACAX,EAAAxC,EAAAgB,OAAA,QAnTA","file":"timetables.min.js","sourcesContent":["const selection = document.getElementById(\"selectionInput\").value;\nconst substitutionPlanType = window.location.pathname.split(\"/\", 2)[1];\n\nlet timetables;\ntry {\n    timetables = JSON.parse(window.localStorage.getItem(substitutionPlanType + \"-timetables\"));\n    if (!timetables)\n        timetables = {};\n} catch {\n    timetables = {};\n}\n\nconst timetablesBlock = document.getElementById(\"timetables-block\");\nif (selection) {\n    const substitutions = {};\n    for (let substitutionsBox of document.getElementsByClassName(\"substitutions-box\")) {\n        const tableBody = substitutionsBox.querySelector(\".substitutions-table tbody\");\n        if (tableBody) {\n            const dayName = substitutionsBox.querySelector(\".day-name\").textContent;\n            /** @type {String} */\n            let groupName = null;\n            let groupSubstitutions = [{}, {}, {}, {}, {}, {}, {}, {}, {}, {}];\n            function newGroupSubstitutions() {\n                let groupLetterPart;\n                let groupNumberPart;\n                const affectedGroups = [];\n                let match = groupName.match(/^(\\d+)([A-Za-z]*)$/);\n                if (match != null) {\n                    groupNumberPart = match[1];\n                    groupLetterPart = match[2].toUpperCase();\n                } else {\n                    groupNumberPart = \"\";\n                    groupLetterPart = groupName.toUpperCase();\n                }\n                if (groupNumberPart !== \"\") {\n                    if (groupLetterPart !== \"\") {\n                        for (let letter of groupLetterPart) {\n                            affectedGroups.push(groupNumberPart + letter);\n                        }\n                    } else {\n                        affectedGroups.push(groupNumberPart);\n                    }\n                } else {\n                    affectedGroups.push(groupLetterPart);\n                }\n                let matchingSelections = [];\n                for (let s of selection.split(\", \")) {\n                    s = s.toUpperCase();\n                    for (let g of affectedGroups) {\n                        if (g.includes(s)) {\n                            matchingSelections.push(s);\n                            break;\n                        }\n                    }\n                }\n                for (let s of matchingSelections) {\n                    if (!(s in substitutions)) {\n                        substitutions[s] = {};\n                    }\n                    if (dayName in substitutions[s]) {\n                        for (let l = 0; l<10; l++) {\n                            substitutions[s][dayName][l] = Object.assign(substitutions[s][dayName][l], groupSubstitutions[l]);\n                        }\n                    } else {\n                        substitutions[s][dayName] = groupSubstitutions;\n                    }\n                }\n            }\n            for (let row of tableBody.children) {\n                let groupNameCell = row.querySelector(\".group-name\");\n                let teacherName;\n                let lessonString;\n                if (groupNameCell != null) {\n                    if (groupName != null)\n                        newGroupSubstitutions();\n                    groupSubstitutions = [{}, {}, {}, {}, {}, {}, {}, {}, {}, {}];\n                    groupName = groupNameCell.textContent;\n                    teacherName = row.children[1].textContent.toUpperCase();\n                    lessonString = row.children[3].textContent;\n                } else {\n                    teacherName = row.children[0].textContent.toUpperCase();\n                    lessonString = row.children[2].textContent;\n                }\n                for (let lesson of lessonString.match(/(\\d+)/g)) {\n                    lesson = parseInt(lesson);\n                    if (1 <= lesson && lesson <= 10) {\n                        if (teacherName in groupSubstitutions[lesson - 1])\n                            groupSubstitutions[lesson - 1][teacherName].push(row);\n                        else\n                            groupSubstitutions[lesson - 1][teacherName] = [row];\n                    }\n                }\n            }\n            if (groupName != null)\n                newGroupSubstitutions();\n        }\n    }\n    console.log(substitutions);\n\n    const timetablesBlockTemplate = document.getElementById(\"timetables-block-template\");\n    const timetableTemplate = document.getElementById(\"timetable-template\");\n    timetablesBlock.appendChild(timetablesBlockTemplate.content);\n    const timetablesContainer = document.getElementById(\"timetables-container\");\n    function setRelevant(input, value = null, markRelevant = true) {\n        if (!value)\n            value = input.value;\n        let selection = input.dataset.selection;\n        if (selection in substitutions) {\n            let s = substitutions[selection];\n            let weekdayName = input.dataset.weekdayName;\n            if (weekdayName in s) {\n                let teacher = value.toUpperCase();\n                s = s[weekdayName][input.dataset.lesson-1];\n                if (teacher in s) {\n                    for (let row of s[teacher]) {\n                        if (markRelevant)\n                            row.classList.add(\"is-relevant\");\n                        else\n                            row.classList.remove(\"is-relevant\");\n                    }\n                }\n            }\n        }\n    }\n    for (let s of selection.split(\", \")) {\n        let sUpper = s.toUpperCase();\n        if (!(sUpper in timetables)) {\n            timetables[sUpper] = [\n                Array(10).fill(\"\"),\n                Array(10).fill(\"\"),\n                Array(10).fill(\"\"),\n                Array(10).fill(\"\"),\n                Array(10).fill(\"\")\n            ];\n        }\n        const timetable = timetableTemplate.content.firstElementChild.cloneNode(true);\n        timetablesContainer.appendChild(timetable);\n        timetable.querySelectorAll(\".timetable-selection\").forEach(e => e.innerText = s);\n        timetable.querySelector(\".share-timetable-button\").addEventListener(\"click\", () => {\n            const shareTimetableBlock = timetable.querySelector(\".share-timetable-block\");\n            if (shareTimetableBlock.hidden) {\n                const linkInput = shareTimetableBlock.querySelector(\".timetable-link-input\");\n                const copyButton = shareTimetableBlock.querySelector(\".copy-timetable-link\");\n                let timetableStr = \"\";\n                for (let day=0; day<5; day++) {\n                    for (let lesson=0; lesson<10; lesson++) {\n                        let teacher = timetables[sUpper][day][lesson];\n                        if (!teacher) {\n                            timetableStr += \"   \";\n                        } else {\n                            if (teacher.length > 3) {\n                                // shouldn't usually happen\n                                teacher = teacher.substr(0, 3);\n                            }\n                            timetableStr += teacher + \" \".repeat(3 - teacher.length);  // make it 3 characters long\n                        }\n                    }\n                }\n                linkInput.value = new URL(\"/\" + substitutionPlanType + \"/#timetable:\" + sUpper + \":\" + btoa(timetableStr), window.location.origin).href;\n                linkInput.addEventListener(\"click\", e => e.target.select());\n                let copyTimeout = null;\n                copyButton.addEventListener(\"click\", () => {\n                    function resetButton() {\n                        if (copyTimeout != null)\n                            clearTimeout(copyTimeout);\n                        copyTimeout = setTimeout(() => {\n                            copyButton.classList.remove(\"copied\");\n                            copyButton.classList.remove(\"copying-failed\");\n                            copyButton.title = \"Kopieren\";\n                            copyTimeout = null;\n                        }, 2000);\n                    }\n\n                    navigator.clipboard.writeText(linkInput.value).then(() => {\n                        copyButton.classList.add(\"copied\");\n                        copyButton.title = \"Kopiert!\";\n                        resetButton();\n                        plausible(\"Timetable: Copy Link\");\n                    }).catch(() => {\n                        copyButton.classList.add(\"copying-failed\");\n                        copyButton.title = \"Kopieren fehlgeschlagen\";\n                        resetButton();\n                    });\n                });\n                shareTimetableBlock.hidden = false;\n            } else {\n                shareTimetableBlock.hidden = true;\n            }\n        });\n        const tbody = timetable.querySelector(\"tbody\");\n        for (let lessonNum = 1; lessonNum < 11; lessonNum++) {\n            const row = document.createElement(\"tr\");\n            tbody.appendChild(row);\n            const th = document.createElement(\"th\");\n            row.appendChild(th);\n            th.innerText = lessonNum + \".\";\n            for (let weekday = 0; weekday < 5; weekday++) {\n                const cell = document.createElement(\"td\");\n                row.appendChild(cell);\n                const input = document.createElement(\"input\");\n                cell.appendChild(input);\n                input.classList.add(\"form-control\", \"form-control-sm\");\n                input.id = \"timetable-\" + sUpper + \"-\" + weekday + \"-\" + lessonNum;\n                const weekdayName = [\"Montag\", \"Dienstag\", \"Mittwoch\", \"Donnerstag\", \"Freitag\"][weekday];\n                input.setAttribute(\"type\", \"text\");\n                input.setAttribute(\"autocapitalize\", \"characters\");\n                input.setAttribute(\"autocomplete\", \"off\");\n                input.setAttribute(\"autocorrect\", \"off\");\n                input.setAttribute(\"spellcheck\", \"false\");\n                input.setAttribute(\"enterkeyhint\", weekday === 4 && lessonNum === 10 ? \"done\" : \"next\");\n                input.setAttribute(\"maxlength\", \"3\");\n                input.setAttribute(\"aria-label\", `${lessonNum}. Stunde ${weekdayName}`);\n                input.addEventListener(\"focus\", e => e.target.select());\n                input.addEventListener(\"input\", e => {\n                    // noinspection JSUnresolvedVariable\n                    setRelevant(e.target, e.target.dataset.oldvalue, false);\n                    // noinspection JSUnresolvedVariable\n                    setRelevant(e.target);\n                    // noinspection JSUnresolvedVariable\n                    e.target.dataset.oldvalue = e.target.value;\n                    // noinspection JSUnresolvedVariable\n                    timetables[e.target.dataset.selection]\n                        [parseInt(e.target.dataset.weekday)]\n                        [parseInt(e.target.dataset.lesson)-1] = e.target.value.toUpperCase();\n                    window.localStorage.setItem(substitutionPlanType + \"-timetables\", JSON.stringify(timetables));\n                });\n                input.dataset.selection = sUpper;\n                // noinspection JSValidateTypes\n                input.dataset.weekday = weekday;\n                input.dataset.weekdayName = weekdayName;\n                // noinspection JSValidateTypes\n                input.dataset.lesson = lessonNum;\n                let teacher = timetables[sUpper][weekday][lessonNum-1];\n                if (teacher) {\n                    input.value = teacher;\n                    input.dataset.oldvalue = teacher;\n                    setRelevant(input);\n                } else {\n                    input.dataset.oldvalue = \"\";\n                }\n            }\n\n            function focusNextLesson(currentInput, direction) {\n                let weekday = parseInt(currentInput.dataset.weekday);\n                let lesson = parseInt(currentInput.dataset.lesson);\n                lesson += direction;\n                if (lesson < 1) {\n                    weekday--;\n                    if (weekday < 0)\n                        return false;\n                    lesson = 10;\n                } else if (lesson > 10) {\n                    weekday++;\n                    if (weekday >= 5) {\n                        currentInput.blur();\n                        return false;\n                    }\n                    lesson = 1;\n                }\n                document.getElementById(\"timetable-\" + currentInput.dataset.selection + \"-\" + weekday + \"-\" + lesson).focus();\n                return true;\n            }\n\n            function focusNextWeekday(currentInput, direction) {\n                let weekday = parseInt(currentInput.dataset.weekday);\n                let lesson = parseInt(currentInput.dataset.lesson);\n                weekday += direction;\n                if (0 <= weekday && weekday <= 4) {\n                    document.getElementById(\"timetable-\" + currentInput.dataset.selection + \"-\" + weekday + \"-\" + lesson).focus();\n                    return true;\n                }\n                return false;\n            }\n\n            tbody.addEventListener(\"keydown\", e => {\n                switch (e.key) {\n                    case \"Tab\":\n                    case \"Enter\":\n                        if (focusNextLesson(e.target, e.shiftKey ? -1 : 1))\n                            e.preventDefault();\n                        break;\n                    case \"ArrowDown\":\n                        if (focusNextLesson(e.target, 1))\n                            e.preventDefault();\n                        break;\n                    case \"ArrowUp\":\n                        if (focusNextLesson(e.target, -1))\n                            e.preventDefault();\n                        break;\n                    case \"ArrowLeft\":\n                        // noinspection JSUnresolvedVariable\n                        if (e.target.selectionStart === 0 &&\n                            (e.target.selectionEnd === 1 || e.target.selectionEnd === 0))\n                            if (focusNextWeekday(e.target, -1))\n                                e.preventDefault();\n                        break;\n                    case \"ArrowRight\":\n                        // noinspection JSUnresolvedVariable\n                        if (e.target.selectionStart === e.target.selectionEnd)\n                            if (focusNextWeekday(e.target, 1))\n                                e.preventDefault();\n                        break;\n                }\n            });\n            tbody.addEventListener(\"input\", e => {\n                // noinspection JSUnresolvedVariable\n                if (e.target.value.length >= e.target.maxLength) {\n                    focusNextLesson(e.target, 1);\n                }\n            });\n        }\n    }\n}\n"]}