{"version":3,"sources":["substitutions-base.js","grey-substitutions.js","highlight-new-substitutions.js","push-notifications.js","updates.js","themes.js","plausible.js"],"names":["reportError","error","event","name","message","undefined","description","number","filename","fileName","lineno","lineNumber","colno","columnNumber","stack","plausible","props","e","console","window","addEventListener","reason","substitutionPlanType","location","pathname","split","selection","document","getElementById","value","hash","startsWith","group","timetableStr","atob","valid","timetable","length","warn","day","lessons","push","lesson","teacher","substr","trim","timetables","JSON","parse","localStorage","getItem","toUpperCase","text","isSelected","s","confirm","setItem","stringify","dates","getElementsByClassName","greySubstitutions","now","Date","innerHTML","getDate","getMonth","getFullYear","i","b2","getHours","c2","getMinutes","setTimeout","getTime","x","classList","add","seenSubstitutions","substitutionsBox","status","textContent","time","substitutions","currentTime","Object","keys","entries","newSubstitutions","tableBody","querySelector","date","row","dd","mm","yyyy","match","date_timestamp","UTC","groupName","children","groupNameCell","subs","td","contains","includes","toggleNotifications","notificationsInfo","notificationsInfo_none","notificationsInfo_all","notificationsInfo_selection","notificationsInfo_blocked","notificationsInfo_failed","subscribePush","isActive","registration","Promise","resolve","reject","pushManager","subscribe","userVisibleOnly","applicationServerKey","base64UrlData","base64","repeat","replace","rawData","buffer","Uint8Array","charCodeAt","base64UrlToUint8Array","then","subscription","log","fetch","origin","method","headers","Content-Type","body","toJSON","is_active","response","json","data","ok","catch","notificationState","setNotificationsInfo","state","checked","disabled","navigator","serviceWorker","ready","reloadPermissionState","Notification","permission","active","hidden","requestPermission","register","onlineStatus","webSocket","onOnline","remove","onOffline","createWebSocket","openCallback","WebSocket","protocol","host","target","msg","type","reload","updateWebSocket","readyState","OPEN","send","ws","appendChild","content","html","documentElement","systemDefaultRadio","lightRadio","darkRadio","applyThemeSetting","setting","theme","matchMedia","matches","Selection","Notifications","Theme","Timetables","registerAnalyticsEvents","elements","callback","registerEvent","d","querySelectorAll","link","middle","which","click","tagName","toLowerCase","href","parentNode","getAttribute","ctrlKey","metaKey","shiftKey","preventDefault","form","submit"],"mappings":"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","file":"../substitutions.min.js","sourcesContent":["function reportError(error, event = null) {\n    try {\n        let name = error.name;\n        let message = (event == null ? undefined : event.message) ||\n            error.message;\n        let description = error.description;  // non-standard Microsoft property\n        let number = error.number; // non-standard Microsoft property\n        let filename = (event == null ? undefined : event.filename) ||\n            error.fileName;  // error.fileName is non-standard Mozilla property\n        let lineno = (event == null ? undefined : event.lineno) ||\n            error.lineNumber;  // error.lineNumber is non-standard Mozilla property\n        let colno = (event == null ? undefined : event.colno) ||\n            error.columnNumber;  // error.columnNumber is non-standard Mozilla property\n        let stack = (event == null ? undefined : event.stack) ||\n            error.stack;  // error.stack is non-standard Mozilla property\n        plausible(\"JavaScript Error\", {\n            props: {\n                [(name || \"Generic Error\") + \": \" + message]: stack + \" - \" + filename + \":\" + lineno + \":\" + colno +\n                \" \" + description + \" \" + number\n            }\n        });\n    } catch (e) {\n        console.error(\"reporting error failed\", e);\n    }\n}\n\nwindow.addEventListener(\"error\", e => reportError(e.error, e));  // e.error is experimental, according to MDN\nwindow.addEventListener(\"unhandledrejection\", e => reportError(e.reason));\n\n\nconst substitutionPlanType = window.location.pathname.split(\"/\", 2)[1];\nconst selection = document.getElementById(\"selectionInput\").value;\n\n// GET TIMETABLE FROM URL\n// The following is not in timetables.js so that it works even with no selection\nif (window.location.hash.startsWith(\"#timetable:\")) {\n    try {\n        let [, group, timetableStr] = window.location.hash.split(\":\");\n        timetableStr = atob(timetableStr);\n        let valid = true;\n        let timetable;\n        if (timetableStr.length !== 3*10*5) {  // 3 chars per lesson, 10 lessons per day, 5 days\n            console.warn(\"Timetable in URL has wrong length:\", timetableStr.length, \"instead of\", 3*10*5, timetableStr);\n            valid = false;\n        } else {\n            timetable = [];\n            for (let day = 0; day < 5; day++) {\n                let lessons = [];\n                timetable.push(lessons);\n                for (let lesson = 0; lesson < 10; lesson++) {\n                    let teacher = timetableStr.substr(day*10*3+lesson*3, 3).trim();\n                    lessons.push(teacher);\n                }\n            }\n        }\n        if (valid) {\n            let timetables;\n            try {\n                timetables = JSON.parse(window.localStorage.getItem(substitutionPlanType + \"-timetables\"));\n                if (!timetables)\n                    timetables = {};\n            } catch {\n                timetables = {};\n            }\n            group = group.toUpperCase();\n            let text = (group in timetables) ?\n                (\"Die aufgerufene URL enthält einen Stundenplan für \" + group + \". Soll der aktuell gespeicherte Stundenplan für \" + group + \" durch diesen ersetzt werden?\")\n                : (\"Die aufgerufene URL enthält einen Stundenplan für \" + group + \". Diesen Stundenplan setzen?\");\n            if (!selection) {\n                text += \" Achtung: Der Stundenplan wird erst angewendet, wenn Vertretungen ausgewählt sind.\";\n            } else {\n                let isSelected = false;\n                for (let s of selection.split(\", \")) {\n                    if (s.toUpperCase() === group) {\n                        isSelected = true;\n                        break;\n                    }\n                }\n                if (!isSelected) {\n                    text += \" Achtung: Der Stundenplan wird erst angewendet, wenn \" + group + \" auch ausgewählt ist.\";\n                }\n            }\n            if (confirm(text)) {\n                timetables[group] = timetable;\n                window.localStorage.setItem(substitutionPlanType + \"-timetables\", JSON.stringify(timetables));\n            }\n            window.location.hash = \"\";\n            plausible(\"Timetable: Set From Link\");\n        }\n    } catch (e) {\n        console.error(\"Error while retrieving timetable from URL\", e);\n        reportError(e);\n    }\n}\n","const dates = document.getElementsByClassName(\"date\");\n\nfunction greySubstitutions() {\n    const now = new Date();\n    if (dates.length > 0 && dates[0].innerHTML === now.getDate() + \".\" + (now.getMonth() + 1) + \".\" + now.getFullYear()) {\n        const b2 = now.getHours();\n        const c2 = now.getMinutes();\n        for (let i of [\n            [\"1\", 8, 35],\n            [\"2\", 9, 25],\n            [\"3\", 10, 30],\n            [\"4\", 11, 15],\n            [\"5\", 12, 20],\n            [\"6\", 13, 10],\n            [\"7\", 14, 35],\n            [\"8\", 15, 25],\n            [\"9\", 16, 20],\n            [\"10\", 17, 5]\n        ]) {\n            if (i[1] < b2 || (i[1] === b2 && i[2] <= c2)) {\n                for (let x of document.getElementsByClassName(\"lesson\" + i[0])) {\n                    x.classList.add(\"grey\");\n                }\n            } else {\n                // noinspection JSCheckFunctionSignatures\n                setTimeout(greySubstitutions, new Date(now.getFullYear(), now.getMonth(), now.getDate(), i[1], i[2]).getTime() - now.getTime());\n                break\n            }\n        }\n    }\n}\n\ngreySubstitutions();\n\nwindow.addEventListener(\"focus\", () => greySubstitutions());\n","let seenSubstitutions;\nlet status = document.getElementById(\"status\").textContent;\ntry {\n    seenSubstitutions = JSON.parse(window.localStorage.getItem(substitutionPlanType + \"-seen-substitutions\"));\n    if (seenSubstitutions[\"status\"] !== status) {\n        let currentTime = Date.now();\n        for (let time of Object.keys(seenSubstitutions[\"seenSubstitutions\"])) {\n            if (time <= currentTime) {\n                delete seenSubstitutions[\"seenSubstitutions\"][time];\n            }\n        }\n        for (let [time, substitutions] of Object.entries(seenSubstitutions[\"newSubstitutions\"])) {\n            if (time > currentTime) {\n                if (time in seenSubstitutions[\"seenSubstitutions\"]) {\n                    seenSubstitutions[\"seenSubstitutions\"][time].push(...substitutions);\n                } else {\n                    seenSubstitutions[\"seenSubstitutions\"][time] = substitutions;\n                }\n            }\n        }\n        seenSubstitutions[\"newSubstitutions\"] = {};\n        seenSubstitutions[\"status\"] = status;\n    }\n} catch {\n}\nif (!seenSubstitutions)\n    seenSubstitutions = {\"seenSubstitutions\": {}, \"newSubstitutions\": {}, \"status\": status};\n\nfor (let substitutionsBox of document.getElementsByClassName(\"substitutions-box\")) {\n    const tableBody = substitutionsBox.querySelector(\".substitutions-table tbody\");\n    if (tableBody) {\n        const date = substitutionsBox.querySelector(\".date\").textContent.trim();\n        let [, dd, mm, yyyy] = date.match(/(\\d\\d?).(\\d\\d?).(\\d\\d\\d\\d)/);\n        const date_timestamp = Date.UTC(yyyy, mm-1, dd+1);\n        if (!(date_timestamp in seenSubstitutions[\"seenSubstitutions\"]))\n            seenSubstitutions[\"seenSubstitutions\"][date_timestamp] = [];\n        if (!(date_timestamp in seenSubstitutions[\"newSubstitutions\"]))\n            seenSubstitutions[\"newSubstitutions\"][date_timestamp] = [];\n        let groupName;\n        for (let row of tableBody.children) {\n            let groupNameCell = row.querySelector(\".group-name\");\n            if (groupNameCell != null) {\n                groupName = groupNameCell.textContent.trim();\n            }\n            let subs = groupName;\n            for (let td of row.children) {\n                if (!td.classList.contains(\".group-name\")) {\n                    subs += \"#\" + td.textContent.trim();\n                }\n            }\n            if (!seenSubstitutions[\"seenSubstitutions\"][date_timestamp].includes(subs)) {\n                row.classList.add(\"new-subs\");\n                if (!seenSubstitutions[\"newSubstitutions\"][date_timestamp].includes(subs))\n                    seenSubstitutions[\"newSubstitutions\"][date_timestamp].push(subs);\n            }\n        }\n    }\n}\n\nwindow.localStorage.setItem(substitutionPlanType + \"-seen-substitutions\", JSON.stringify(seenSubstitutions));\n","const toggleNotifications = document.getElementById(\"toggle-notifications\");\nconst notificationsInfo = document.getElementById(\"notifications-info\");\nconst notificationsInfo_none = document.getElementById(\"notifications-info-none\");\nconst notificationsInfo_all = document.getElementById(\"notifications-info-all\");\nconst notificationsInfo_selection = document.getElementById(\"notifications-info-selection\");\nconst notificationsInfo_blocked = document.getElementById(\"notifications-info-blocked\");\nconst notificationsInfo_failed = document.getElementById(\"notifications-info-failed\");\n\nfunction base64UrlToUint8Array(base64UrlData) {\n    const padding = '='.repeat((4 - base64UrlData.length % 4) % 4);\n    const base64 = (base64UrlData + padding)\n        .replace(/-/g, '+')\n        .replace(/_/g, '/');\n\n    const rawData = atob(base64);\n    const buffer = new Uint8Array(rawData.length);\n\n    for (let i = 0; i < rawData.length; ++i) {\n        buffer[i] = rawData.charCodeAt(i);\n    }\n\n    return buffer;\n}\n\nfunction subscribePush(isActive, registration) {\n    return new Promise((resolve, reject) => {\n        registration.pushManager.subscribe({\n            userVisibleOnly: true,\n            applicationServerKey: base64UrlToUint8Array(\"BDu6tTwQHFlGb36-pLCzwMdgumSlyj_vqMR3I1KahllZd3v2se-LM25vhP3Yv_y0qXYx_KPOVOD2EYTaJaibzo8\")\n        }).then(subscription => {\n            console.log(\"Got push subscription:\", subscription, isActive ? \"(active)\" : \"(not active)\");\n            return fetch(window.location.origin + window.location.pathname + \"api/subscribe-push\", {\n                method: \"post\",\n                \"headers\": {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({subscription: subscription.toJSON(), selection: selection, is_active: isActive})\n            });\n        }).then(response => response.json()\n        ).then(data => {\n            if (data.ok) {\n                console.log(\"Push subscription successful\");\n                resolve();\n            } else {\n                console.error(\"Push subscription failed\", data);\n                reject();\n            }\n        }).catch(reason => {\n            console.error(\"Push subscription failed\", reason);\n            reject(reason);\n        });\n    });\n}\n\n\nlet notificationState;\n\nfunction setNotificationsInfo(state, registration) {\n    console.log(\"Setting notification-state to\", state);\n    notificationState = state;\n    if (state !== \"failed\")\n        localStorage.setItem(substitutionPlanType + \"-notification-state\", notificationState);\n    localStorage.setItem(substitutionPlanType + \"-notification-state-all\", notificationState);  // for Plausible with \"failed\", see plausible.js\n    switch (notificationState) {\n        case \"granted-and-enabled\":\n            toggleNotifications.checked = true;\n            toggleNotifications.disabled = false;\n            if (selection !== \"\") {\n                notificationsInfo.innerHTML = notificationsInfo_selection.innerHTML.replace(\"{selection}\", selection);\n            } else {\n                notificationsInfo.innerHTML = notificationsInfo_all.innerHTML;\n            }\n            subscribePush(true, registration)\n                .catch(reason => {\n                    console.error(\"Push subscription failed\", reason);\n                    setNotificationsInfo(\"failed\", registration);\n                });\n            break;\n        case \"denied\":\n            toggleNotifications.checked = false;\n            toggleNotifications.disabled = true;\n            notificationsInfo.innerHTML = notificationsInfo_blocked.innerHTML;\n            break;\n        case \"failed\":\n            toggleNotifications.checked = false;\n            toggleNotifications.disabled = true;\n            notificationsInfo.innerHTML = notificationsInfo_failed.innerHTML;\n            break;\n        case \"granted-and-disabled\":\n            subscribePush(false, registration)\n                .catch(reason => {\n                    console.error(\"Push subscription failed\", reason);\n                    setNotificationsInfo(\"failed\", registration);\n                });\n            toggleNotifications.checked = false;\n            toggleNotifications.disabled = false;\n            notificationsInfo.innerHTML = notificationsInfo_none.innerHTML;\n            break;\n        default:\n        case \"default\":\n            toggleNotifications.checked = false;\n            toggleNotifications.disabled = false;\n            notificationsInfo.innerHTML = notificationsInfo_none.innerHTML;\n            break;\n    }\n}\n\nfunction onNotificationsAvailable(registration) {\n    document.getElementById(\"notifications-not-available-alert\").hidden = true;\n    document.getElementById(\"toggle-notifications-wrapper\").hidden = false;\n    toggleNotifications.addEventListener(\"change\", () => {\n        if (toggleNotifications.checked) {\n            window.Notification.requestPermission()\n                .then(permission => {\n                    switch (permission) {\n                        case \"granted\":\n                            notificationState = \"granted-and-enabled\";\n                            break;\n                        default:\n                            notificationState = permission;\n                    }\n                    setNotificationsInfo(notificationState, registration);\n                });\n            plausible(\"Push Subscription\", {props: {[substitutionPlanType]: \"Subscribe\"}})\n        } else {\n            if (notificationState === \"granted-and-enabled\") {\n                setNotificationsInfo(\"granted-and-disabled\", registration);\n            }\n            plausible(\"Push Subscription\", {props: {[substitutionPlanType]: \"Unsubscribe\"}})\n        }\n    });\n\n    function reloadPermissionState() {\n        if (!notificationState.startsWith(Notification.permission) && notificationState !== \"failed\") {\n            console.log(notificationState + \" changed to \" + Notification.permission);\n            // permission has been changed\n            if (Notification.permission === \"granted\") {\n                setNotificationsInfo(\"granted-and-disabled\", registration);\n            } else {\n                setNotificationsInfo(Notification.permission, registration);\n            }\n            return true;\n        }\n        return false;\n    }\n    window.addEventListener(\"focus\", reloadPermissionState);\n\n    notificationState = window.localStorage.getItem(substitutionPlanType + \"-notification-state\");\n    if (notificationState == null\n        // \"failed\" is no longer stored in localStorage to prevent notifications from being disabled if the offline\n        // page was viewed, but perhaps it's still in there from earlier versions:\n        || notificationState === \"failed\")\n        notificationState = \"default\";\n    if (!reloadPermissionState()) {\n        setNotificationsInfo(notificationState, registration);\n    }\n}\n\nif (\"serviceWorker\" in navigator) {\n    window.addEventListener(\"load\", () => {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                console.log(\"ServiceWorker is active:\", registration.active);\n                if (\"Notification\" in window && \"localStorage\" in window && \"PushManager\" in window) {\n                    onNotificationsAvailable(registration);\n                } else {\n                    console.warn(\"Push Notifications are not supported\");\n                    localStorage.setItem(substitutionPlanType + \"-notification-state-all\", \"unsupported\");  // for Plausible\n                }\n            });\n        navigator.serviceWorker.register(\"/sw.min.js\")\n            .then(registration => {\n                console.log(\"ServiceWorker registration successful:\", registration);\n            }).catch(reason => console.warn(\"ServiceWorker registration failed:\", reason))\n    });\n} else {\n    console.warn(\"Service Worker is not supported\");\n    localStorage.setItem(substitutionPlanType + \"-notification-state-all\", \"unsupported\");  // for Plausible\n}\n","const onlineStatus = document.getElementById(\"online-status\");\n\nlet webSocket = null;\n\nfunction onOnline() {\n    onlineStatus.textContent = \"Aktuell\";\n    onlineStatus.classList.add(\"online\");\n    onlineStatus.classList.remove(\"offline\", \"updating\");\n}\nfunction onOffline() {\n    onlineStatus.textContent = \"Offline\";\n    onlineStatus.classList.add(\"offline\");\n    onlineStatus.classList.remove(\"online\", \"updating\");\n}\nfunction onUpdating() {\n    onlineStatus.textContent = \"Aktualisiere...\";\n    onlineStatus.classList.add(\"updating\");\n    onlineStatus.classList.remove(\"online\", \"offline\");\n}\nfunction createWebSocket(openCallback=null) {\n    webSocket = new WebSocket(\n        (window.location.protocol === \"http:\" ? \"ws:\" : \"wss:\") + \"//\" +\n        window.location.host + window.location.pathname + \"api/wait-for-updates\");\n\n    webSocket.addEventListener(\"open\", event => {\n        console.log(\"WebSocket opened\", event);\n        onOnline();\n        if (openCallback)\n            openCallback(event.target);\n    });\n    webSocket.addEventListener(\"close\", event => {\n        console.log(\"WebSocket closed\", event);\n        onOffline();\n    });\n    webSocket.addEventListener(\"message\", event => {\n        const msg = JSON.parse(event.data);\n        console.log(\"WebSocket message\", msg);\n        switch (msg.type) {\n            /*case \"heartbeat\":\n                clearTimeout(disconnectTimeout);\n                break;*/\n            case \"status\":\n                let status = msg.status;\n                if (status) {\n                    if (status === document.getElementById(\"status\").textContent)\n                        onOnline();\n                    else\n                        window.location.reload();\n                }\n                break;\n            default:\n                console.warn(\"Unknown WebSocket message type\", msg.type);\n                break;\n        }\n    });\n}\ncreateWebSocket();\n\nfunction updateWebSocket() {\n    onUpdating();\n    // Request current status from server\n    if (webSocket.readyState === webSocket.OPEN) {\n        webSocket.send(JSON.stringify({type: \"get_status\"}));\n    } else {\n        createWebSocket(ws => ws.send(JSON.stringify({type: \"get_status\"})));\n    }\n}\n\nwindow.addEventListener(\"focus\", () => {\n    console.log(\"focus, checking for new substitutions\");\n    updateWebSocket();\n});\nwindow.addEventListener(\"online\", () => {\n    console.log(\"online, checking for new substitutions\");\n    updateWebSocket();\n});\nwindow.addEventListener(\"offline\", () => {\n    console.log(\"offline\");\n    onOffline();\n});\n","document.getElementById(\"themes-block\").appendChild(document.getElementById(\"themes-block-template\").content);\n\nconst html = document.documentElement;\nconst systemDefaultRadio = document.getElementById(\"themes-system-default\");\nconst lightRadio = document.getElementById(\"themes-light\");\nconst darkRadio = document.getElementById(\"themes-dark\");\n\nfunction applyThemeSetting(setting) {\n    localStorage.setItem(\"theme\", setting);\n    switch (setting) {\n        case \"system-default\":\n            html.classList.remove(\"light\", \"dark\");\n            break;\n        case \"light\":\n            html.classList.add(\"light\");\n            html.classList.remove(\"dark\");\n            break;\n        case \"dark\":\n            html.classList.add(\"dark\");\n            html.classList.remove(\"light\");\n            break;\n    }\n}\n\nlet theme = localStorage.getItem(\"theme\");\n\nswitch (theme) {\n    case \"light\":\n        lightRadio.checked = true;\n        break;\n    case \"dark\":\n        darkRadio.checked = true;\n}\nsystemDefaultRadio.addEventListener(\"change\", () => applyThemeSetting(\"system-default\"));\nlightRadio.addEventListener(\"change\", () => applyThemeSetting(\"light\"));\ndarkRadio.addEventListener(\"change\", () => applyThemeSetting(\"dark\"));\n","\n/*// remove any tracking-related queries  // doesn't currently work since Plausible script is executed afterwards\nconst url = new URL(window.location);\nlet change = false;\nfor (let p of [\"ref\", \"source\", \"utm_source\", \"utm_medium\", \"utm_campaign\"]) {\n    if (url.searchParams.has(p)) {\n        change = true;\n        url.searchParams.delete(p);\n    }\n}\nif (change)\n    history.replaceState(null, \"\", url)*/\n\n// send features to Plausible\ntry {\n    let theme = localStorage.getItem(\"theme\");\n    if (theme === \"system-default\" || !theme)\n        theme = \"system-\" + ((window.matchMedia &&\n            window.matchMedia(\"(prefers-color-scheme: dark)\").matches)\n            ? \"dark\"\n            : \"light\");\n\n    plausible(\"Features - \" + substitutionPlanType, {\n        props: {\n            Selection: selection ? (selection.match(/,/g) || []).length + 1 : 0,\n            Notifications: localStorage.getItem(substitutionPlanType + \"-notification-state-all\"),\n            Theme: theme,\n            Timetables: null,  // TODO\n        }\n    })\n} catch (e) {\n    console.error(e);\n}\n\n// CLICK TRACKING\n// copied from https://plausible.io/docs/custom-event-goals\n\nregisterAnalyticsEvents(document.querySelectorAll(\"a[data-pa]\"), handleLinkEvent);\n\n// Handle button form events - those that have data-analytics\nregisterAnalyticsEvents(document.querySelectorAll(\"button[data-pa]\"), handleFormEvent);\n\n/**\n* Iterate Elements and add event listener\n*\n* @param {NodeList} elements - Array of elements\n* @param {CallableFunction} callback\n*/\nfunction registerAnalyticsEvents(elements, callback) {\n    for (let e of elements) {\n        e.addEventListener(\"click\", callback);\n        e.addEventListener(\"auxclick\", callback);\n    }\n}\n\n/**\n* Handle Link Events with plausible\n* https://github.com/plausible/analytics/blob/e1bb4368460ebb3a0bb86151b143176797b686cc/tracker/src/plausible.js#L74\n*\n* @param {Event} event - click\n*/\nfunction handleLinkEvent(event) {\n    let link = event.target;\n    const middle = event.type === \"auxclick\" && event.which === 2;\n    const click = event.type === \"click\";\n    while (link && (typeof link.tagName == \"undefined\" || link.tagName.toLowerCase() !== \"a\" || !link.href)) {\n        link = link.parentNode;\n    }\n\n    if (middle || click)\n        registerEvent(link.getAttribute(\"data-pa\"));\n\n    // Delay navigation so that Plausible is notified of the click\n    if (!link.target) {\n        if (!(event.ctrlKey || event.metaKey || event.shiftKey) && click) {\n            setTimeout(function () {\n                location.href = link.href;\n            }, 150);\n            event.preventDefault();\n        }\n    }\n}\n/**\n* Handle form button submit events with plausible\n*\n* @param {Event} event - click\n*/\nfunction handleFormEvent(event) {\n    event.preventDefault();\n\n    registerEvent(event.target.getAttribute(\"data-pa\"));\n\n    setTimeout(function () {\n        event.target.form.submit();\n    }, 150);\n}\n/**\n* Parse data and call plausible\n* Using data attribute in html eg. data-analytics='\"Register\", {\"props\":{\"plan\":\"Starter\"}}'\n*\n* @param {string} data - plausible event \"Register\", {\"props\":{\"plan\":\"Starter\"}}\n*/\nfunction registerEvent(data) {\n    // break into array\n    //let attributes = data.split(/,(.+)/);\n\n    // Parse it to object\n    //let events = [JSON.parse(attributes[0]), JSON.parse(attributes[1] || '{}')];\n\n    //plausible(...events);\n\n    // changed by me to:\n    let d = data.split(\",\");\n    plausible(JSON.parse(d[0]), d[1] ? {props: JSON.parse(d[1])} : null);\n}\n"]}