'use strict';const d=document.getElementsByClassName("date");
function e(){const a=new Date;if(0<d.length&&d[0].innerHTML===a.getDate()+"."+(a.getMonth()+1)+"."+a.getFullYear()){const b=a.getHours(),c=a.getMinutes();for(let f of[["1",8,35],["2",9,25],["3",10,30],["4",11,15],["5",12,20],["6",13,10],["7",14,35],["8",15,25],["9",16,20],["10",17,5]])if(f[1]<b||f[1]===b&&f[2]<=c)for(let h of document.getElementsByClassName("lesson"+f[0]))h.classList.add("grey");else{setTimeout(e,(new Date(a.getFullYear(),a.getMonth(),a.getDate(),f[1],f[2])).getTime()-a.getTime());
break}}}e();let g=window.location.pathname.split("/",2)[1];const k=document.getElementById("online-status");let l=null;
function m(a=null){l=new WebSocket(("http:"===window.location.protocol?"ws:":"wss:")+"//"+window.location.host+window.location.pathname+"api/wait-for-updates");l.addEventListener("open",b=>{k.textContent="Aktuell";k.classList.add("online");k.classList.remove("offline");console.log("WebSocket opened",b);a&&a()});l.addEventListener("close",b=>{k.textContent="Keine Verbindung zum Server";k.classList.add("offline");k.classList.remove("online");console.log("WebSocket closed",b)});l.addEventListener("message",
b=>{b=JSON.parse(b.data);console.log("WebSocket message",b);switch(b.type){case "new_substitutions":window.location.reload();break;default:console.warn("Unknown WebSocket message type")}});window.addEventListener("offline",()=>{console.log("offline, closing WebSocket connection");l.close()})}m();
function p(){l.readyState===l.OPEN?l.send(JSON.stringify({type:"check_status",status:document.getElementById("status").textContent})):m(()=>l.send(JSON.stringify({type:"check_status",status:document.getElementById("status").textContent})))}window.addEventListener("focus",()=>{console.log("focus, checking for new substitutions");p()});window.addEventListener("online",()=>{console.log("online, checking for new substitutions");p()});
const q=document.getElementById("selectionInput").value,r=document.getElementById("toggle-notifications"),t=document.getElementById("notifications-info"),u=document.getElementById("notifications-info-none"),v=document.getElementById("notifications-info-all"),w=document.getElementById("notifications-info-selection"),x=document.getElementById("notifications-info-blocked"),y=document.getElementById("notifications-info-failed");
function z(a){var b="=".repeat((4-a.length%4)%4);a=(a+b).replace(/-/g,"+").replace(/_/g,"/");a=atob(a);b=new Uint8Array(a.length);for(let c=0;c<a.length;++c)b[c]=a.charCodeAt(c);return b}
function A(a,b){return new Promise((c,f)=>{b.pushManager.subscribe({userVisibleOnly:!0,applicationServerKey:z("BDu6tTwQHFlGb36-pLCzwMdgumSlyj_vqMR3I1KahllZd3v2se-LM25vhP3Yv_y0qXYx_KPOVOD2EYTaJaibzo8")}).then(h=>{console.log("Got push subscription:",h,a?"(active)":"(not active)");fetch(window.location.origin+window.location.pathname+"api/subscribe-push",{method:"post",headers:{"Content-Type":"application/json"},body:JSON.stringify({subscription:h.toJSON(),selection:q,is_active:a})}).then(n=>n.json()).then(n=>
{n.ok?(console.log("Push subscription successful"),c()):(console.error("Push subscription failed",n),f())})}).catch(h=>{console.error("Push subscription failed",h);f(h)})})}let B;
function C(a,b){console.log("Setting notification-state to",a);B=a;window.localStorage.setItem(g+"-notification-state",B);switch(B){case "granted-and-enabled":r.checked=!0;r.disabled=!1;t.innerHTML=""!==q?w.innerHTML.replace("{selection}",q):v.innerHTML;A(!0,b).catch(c=>{console.error("Push subscription failed",c);C("failed",b)});break;case "denied":r.checked=!1;r.disabled=!0;t.innerHTML=x.innerHTML;break;case "failed":r.checked=!1;r.disabled=!0;t.innerHTML=y.innerHTML;break;case "granted-and-disabled":A(!1,
b).catch(c=>{console.error("Push subscription failed",c);C("failed",b)});r.checked=!1;r.disabled=!1;t.innerHTML=u.innerHTML;break;default:case "default":r.checked=!1,r.disabled=!1,t.innerHTML=u.innerHTML}}
function D(a){function b(){return B.startsWith(Notification.permission)?!1:("granted"===Notification.permission?C("granted-and-disabled",a):C(Notification.permission,a),!0)}document.getElementById("notifications-not-available-alert").hidden=!0;document.getElementById("toggle-notifications-wrapper").hidden=!1;r.addEventListener("change",()=>{r.checked?window.Notification.requestPermission().then(c=>{switch(c){case "granted":B="granted-and-enabled";break;default:B=c}C(B,a)}):"granted-and-enabled"===
B&&C("granted-and-disabled",a)});window.addEventListener("focus",b);B=window.localStorage.getItem(g+"-notification-state");null==B&&(B="default");b()||C(B,a)}
"serviceWorker"in navigator?window.addEventListener("load",()=>{navigator.serviceWorker.ready.then(a=>{console.log("ServiceWorker is active:",a.active);"Notification"in window?"localStorage"in window?"PushManager"in window?D(a):console.warn("PushManager is not supported"):console.warn("localStorage is not supported"):console.warn("Notification is not supported")});navigator.serviceWorker.register("/sw.min.js").then(a=>{console.log("ServiceWorker registration successful:",a)}).catch(a=>console.warn("ServiceWorker registration failed:",
a))}):console.warn("serviceWorker is not supported");

//# sourceMappingURL=substitutions.min.js.map
