(function(){'use strict';function e(a,b=null){fetch("/api/report-error",{method:"post",body:new URLSearchParams({name:a.name,message:(null==b?void 0:b.message)||a.message,description:a.description,number:a.number,filename:(null==b?void 0:b.filename)||a.fileName,lineno:(null==b?void 0:b.lineno)||a.lineNumber,colno:(null==b?void 0:b.colno)||a.columnNumber,stack:(null==b?void 0:b.stack)||a.stack,user_agent:navigator.userAgent})})}window.addEventListener("error",a=>{e(a.error,a)});
window.addEventListener("unhandledrejection",a=>{console.log("unhandledrejection",a);e(a.reason)});const f=window.location.pathname.split("/",2)[1],h=document.getElementById("selectionInput").value;
if(window.location.hash.startsWith("#timetable:"))try{let [,a,b]=window.location.hash.split(":");b=JSON.parse(atob(b));if(5===b.length&&a){let c=!0;for(let d of b)if(10!==d.length){c=!1;break}if(c){let d;try{(d=JSON.parse(window.localStorage.getItem(f+"-timetables")))||(d={})}catch{d={}}a=a.toUpperCase();let g=a in d?"Die aufgerufenen URL enth\u00e4lt einen Stundenplan f\u00fcr "+a+". Soll der aktuell gesetzte Stundenplan f\u00fcr "+a+" durch diesen ersetzt werden?":"Die aufgerufene URL enth\u00e4lt einen Stundenplan f\u00fcr "+
a+". Diesen Stundenplan setzen?";if(h){let k=!1;for(let A of h.split(", "))if(A.toUpperCase()===a){k=!0;break}k||(g+=" Achtung: Der Stundenplan wird erst angewendet, wenn "+a+" auch ausgew\u00e4hlt ist.")}else g+=" Achtung: Der Stundenplan wird erst angewendet, wenn Vertretungen ausgew\u00e4hlt sind.";confirm(g)&&(d[a]=b,window.localStorage.setItem(f+"-timetables",JSON.stringify(d)));window.location.hash=""}}}catch{};const l=document.getElementsByClassName("date");
function m(){const a=new Date;if(0<l.length&&l[0].innerHTML===a.getDate()+"."+(a.getMonth()+1)+"."+a.getFullYear()){const b=a.getHours(),c=a.getMinutes();for(let d of[["1",8,35],["2",9,25],["3",10,30],["4",11,15],["5",12,20],["6",13,10],["7",14,35],["8",15,25],["9",16,20],["10",17,5]])if(d[1]<b||d[1]===b&&d[2]<=c)for(let g of document.getElementsByClassName("lesson"+d[0]))g.classList.add("grey");else{setTimeout(m,(new Date(a.getFullYear(),a.getMonth(),a.getDate(),d[1],d[2])).getTime()-a.getTime());
break}}}m();const n=document.getElementById("toggle-notifications"),p=document.getElementById("notifications-info"),q=document.getElementById("notifications-info-none"),r=document.getElementById("notifications-info-all"),t=document.getElementById("notifications-info-selection"),u=document.getElementById("notifications-info-blocked"),v=document.getElementById("notifications-info-failed");
function w(a){var b="=".repeat((4-a.length%4)%4);a=(a+b).replace(/-/g,"+").replace(/_/g,"/");a=atob(a);b=new Uint8Array(a.length);for(let c=0;c<a.length;++c)b[c]=a.charCodeAt(c);return b}
function x(a,b){return new Promise((c,d)=>{b.pushManager.subscribe({userVisibleOnly:!0,applicationServerKey:w("BDu6tTwQHFlGb36-pLCzwMdgumSlyj_vqMR3I1KahllZd3v2se-LM25vhP3Yv_y0qXYx_KPOVOD2EYTaJaibzo8")}).then(g=>{console.log("Got push subscription:",g,a?"(active)":"(not active)");fetch(window.location.origin+window.location.pathname+"api/subscribe-push",{method:"post",headers:{"Content-Type":"application/json"},body:JSON.stringify({subscription:g.toJSON(),selection:h,is_active:a})}).then(k=>k.json()).then(k=>
{k.ok?(console.log("Push subscription successful"),c()):(console.error("Push subscription failed",k),d())})}).catch(g=>{console.error("Push subscription failed",g);d(g)})})}let y;
function z(a,b){console.log("Setting notification-state to",a);y=a;window.localStorage.setItem(f+"-notification-state",y);switch(y){case "granted-and-enabled":n.checked=!0;n.disabled=!1;p.innerHTML=""!==h?t.innerHTML.replace("{selection}",h):r.innerHTML;x(!0,b).catch(c=>{console.error("Push subscription failed",c);z("failed",b)});break;case "denied":n.checked=!1;n.disabled=!0;p.innerHTML=u.innerHTML;break;case "failed":n.checked=!1;n.disabled=!0;p.innerHTML=v.innerHTML;break;case "granted-and-disabled":x(!1,
b).catch(c=>{console.error("Push subscription failed",c);z("failed",b)});n.checked=!1;n.disabled=!1;p.innerHTML=q.innerHTML;break;default:case "default":n.checked=!1,n.disabled=!1,p.innerHTML=q.innerHTML}}
function B(a){function b(){return y.startsWith(Notification.permission)?!1:("granted"===Notification.permission?z("granted-and-disabled",a):z(Notification.permission,a),!0)}document.getElementById("notifications-not-available-alert").hidden=!0;document.getElementById("toggle-notifications-wrapper").hidden=!1;n.addEventListener("change",()=>{n.checked?window.Notification.requestPermission().then(c=>{switch(c){case "granted":y="granted-and-enabled";break;default:y=c}z(y,a)}):"granted-and-enabled"===
y&&z("granted-and-disabled",a)});window.addEventListener("focus",b);y=window.localStorage.getItem(f+"-notification-state");null==y&&(y="default");b()||z(y,a)}
"serviceWorker"in navigator?window.addEventListener("load",()=>{navigator.serviceWorker.ready.then(a=>{console.log("ServiceWorker is active:",a.active);"Notification"in window?"localStorage"in window?"PushManager"in window?B(a):console.warn("PushManager is not supported"):console.warn("localStorage is not supported"):console.warn("Notification is not supported")});navigator.serviceWorker.register("/sw.min.js").then(a=>{console.log("ServiceWorker registration successful:",a)}).catch(a=>console.warn("ServiceWorker registration failed:",
a))}):console.warn("serviceWorker is not supported");const C=document.getElementById("online-status");let D=null;function E(){C.textContent="Keine Verbindung zum Server";C.classList.add("offline");C.classList.remove("online")}
function F(a=null){D=new WebSocket(("http:"===window.location.protocol?"ws:":"wss:")+"//"+window.location.host+window.location.pathname+"api/wait-for-updates");D.addEventListener("open",b=>{console.log("WebSocket opened",b);C.textContent="Aktuell";C.classList.add("online");C.classList.remove("offline");a&&a()});D.addEventListener("close",b=>{console.log("WebSocket closed",b);E()});D.addEventListener("message",b=>{b=JSON.parse(b.data);console.log("WebSocket message",b);switch(b.type){case "new_substitutions":window.location.reload();
break;default:console.warn("Unknown WebSocket message type")}})}F();function G(){D.readyState===D.OPEN?D.send(JSON.stringify({type:"check_status",status:document.getElementById("status").textContent})):F(()=>D.send(JSON.stringify({type:"check_status",status:document.getElementById("status").textContent})))}window.addEventListener("focus",()=>{console.log("focus, checking for new substitutions");G()});window.addEventListener("online",()=>{console.log("online, checking for new substitutions");G()});
window.addEventListener("offline",()=>{console.log("offline, closing WebSocket connection");E();D.close()});}).call(this);

//# sourceMappingURL=substitutions.min.js.map
