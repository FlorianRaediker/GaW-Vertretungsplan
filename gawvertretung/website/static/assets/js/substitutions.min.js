'use strict';const e=document.getElementsByClassName("date");
function f(){const a=new Date;if(0<e.length&&e[0].innerHTML===a.getDate()+"."+(a.getMonth()+1)+"."+a.getFullYear()){const b=a.getHours(),c=a.getMinutes();for(let d of[["1",8,35],["2",9,25],["3",10,30],["4",11,15],["5",12,20],["6",13,10],["7",14,35],["8",15,25],["9",16,20],["10",17,5]])if(d[1]<b||d[1]===b&&d[2]<=c)for(let a of document.getElementsByClassName("lesson"+d[0]))a.classList.add("grey");else{setTimeout(f,(new Date(a.getFullYear(),a.getMonth(),a.getDate(),d[1],d[2])).getTime()-a.getTime());
break}}}f();let g=window.location.pathname.split(1)[1];g||(g="students");const h=new WebSocket(("http:"===window.location.protocol?"ws:":"wss:")+"//"+window.location.host+window.location.pathname+"api/wait-for-updates");h.onopen=a=>{console.log("WebSocket opened",a);k.textContent="Aktuell";k.classList.add("online");k.classList.remove("offline")};h.onclose=a=>{console.log("WebSocket closed",a);k.textContent="Keine Verbindung zum Server";k.classList.add("offline");k.classList.remove("online")};
h.onmessage=a=>{a=JSON.parse(a.data);console.log("WebSocket message",a);window.location.reload()};
const k=document.getElementById("online-status"),l=document.getElementById("selectionInput").value,m=document.getElementById("notifications-block"),n=document.getElementById("toggle-notifications"),p=document.getElementById("notifications-info-none"),q=document.getElementById("notifications-info-all"),r=document.getElementById("notifications-info-selection"),t=document.getElementById("notifications-info-selection-content"),u=document.getElementById("notifications-info-blocked");let v;
function w(a){var b="=".repeat((4-a.length%4)%4);a=(a+b).replace(/-/g,"+").replace(/_/g,"/");a=atob(a);b=new Uint8Array(a.length);for(let c=0;c<a.length;++c)b[c]=a.charCodeAt(c);return b}console.log(window.location);
function x(a){switch(a){case "granted":p.hidden=!0;""!==l?(t.textContent=l,r.hidden=!1):q.hidden=!1;v.pushManager.subscribe({userVisibleOnly:!0,applicationServerKey:w("BDu6tTwQHFlGb36-pLCzwMdgumSlyj_vqMR3I1KahllZd3v2se-LM25vhP3Yv_y0qXYx_KPOVOD2EYTaJaibzo8")}).then(a=>{console.log("Subscription",a);fetch(window.location.origin+window.location.pathname+"api/subscribe-push",{method:"post",headers:{"Content-Type":"application/json"},body:JSON.stringify({subscription:a.toJSON(),selection:l,is_active:!0})}).then(a=>
a.json()).then(()=>{})}).catch(a=>console.warn("Unable to subscribe to push",a));break;case "denied":n.checked=!1;n.disabled=!0;p.hidden=!0;u.hidden=!1;break;case "default":n.checked=!1}}
function y(){m.hidden=!1;x(Notification.permission);v.pushManager.getSubscription().then(()=>{});n.addEventListener("change",()=>{n.checked?window.Notification.requestPermission().then(a=>x(a)):(q.hidden=!0,r.hidden=!0,p.hidden=!1)});v.pushManager.getSubscription().then(a=>{null==a?console.log("Not subscribed to push service"):console.log("Subscription object:",a)})}
"serviceWorker"in navigator?window.addEventListener("load",()=>{navigator.serviceWorker.register("/sw.min.js").then(a=>{v=a;console.log("ServiceWorker registration successful:",a);"PushManager"in window&&"Notification"in window?y():console.warn("PushManager and/or Notification is not supported")}).catch(a=>console.warn("ServiceWorker registration failed:",a))}):console.warn("ServiceWorker is not supported");
