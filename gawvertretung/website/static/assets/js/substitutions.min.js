'use strict';const c=document.getElementsByClassName("date");
function d(){const a=new Date;if(0<c.length&&c[0].innerHTML===a.getDate()+"."+(a.getMonth()+1)+"."+a.getFullYear()){const k=a.getHours(),t=a.getMinutes();for(let b of[["1",8,35],["2",9,25],["3",10,30],["4",11,15],["5",12,20],["6",13,10],["7",14,35],["8",15,25],["9",16,20],["10",17,5]])if(b[1]<k||b[1]===k&&b[2]<=t)for(let a of document.getElementsByClassName("lesson"+b[0]))a.classList.add("grey");else{setTimeout(d,(new Date(a.getFullYear(),a.getMonth(),a.getDate(),b[1],b[2])).getTime()-a.getTime());
break}}}d();let e=window.location.pathname.split(1)[1];e||(e="students");const f=new WebSocket("ws://localhost:8080/api/"+e+"/wait-for-update");f.onopen=a=>{console.log("WebSocket opened",a);g.textContent="Aktuell";g.classList.add("online");g.classList.remove("offline")};f.onclose=a=>{console.log("WebSocket closed",a);g.textContent="Keine Verbindung zum Server";g.classList.add("offline");g.classList.remove("online")};f.onmessage=a=>{a=JSON.parse(a.data);console.log("WebSocket message",a);window.location.reload()};
const g=document.getElementById("online-status"),h=document.getElementById("selectionInput").value,l=document.getElementById("notifications-block"),m=document.getElementById("toggle-notifications"),n=document.getElementById("notifications-info-none"),p=document.getElementById("notifications-info-all"),q=document.getElementById("notifications-info-selection"),r=document.getElementById("notifications-info-selection-content");let u;
function v(){m.disabled=!0;notificationsInfo.textContent="Du hast Benachrichtigungen vom Vertretungsplan blockiert.";notificationsInfo.classList.add("text-danger")}
function w(){l.hidden=!1;if("Notification"in window)switch(Notification.permission){case "denied":v()}u.pushManager.getSubscription().then(()=>{});m.addEventListener("change",()=>{m.checked?window.Notification.requestPermission().then(a=>{switch(a){case "denied":m.checked=!1;v();break;case "default":m.checked=!1;break;case "granted":n.hidden=!0,""!==h?(r.textContent=h,q.hidden=!1):p.hidden=!1}}):(p.hidden=!0,q.hidden=!0,n.hidden=!1)})}
"serviceWorker"in navigator?window.addEventListener("load",()=>{navigator.serviceWorker.register("/sw.min.js").then(a=>{u=a;console.log("ServiceWorker registration successful:",a);"PushManager"in window?w():console.warn("PushManager is not supported")}).catch(a=>console.warn("ServiceWorker registration failed:",a))}):console.warn("ServiceWorker is not supported");
