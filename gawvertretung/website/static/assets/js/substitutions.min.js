'use strict';const b=document.getElementsByClassName("date");
function c(){const a=new Date;if(0<b.length&&b[0].innerHTML===a.getDate()+"."+(a.getMonth()+1)+"."+a.getFullYear()){const d=a.getHours(),e=a.getMinutes();for(let f of[["1",8,35],["2",9,25],["3",10,30],["4",11,15],["5",12,20],["6",13,10],["7",14,35],["8",15,25],["9",16,20],["10",17,5]])if(f[1]<d||f[1]===d&&f[2]<=e)for(let a of document.getElementsByClassName("lesson"+f[0]))a.classList.add("grey");else{setTimeout(c,(new Date(a.getFullYear(),a.getMonth(),a.getDate(),f[1],f[2])).getTime()-a.getTime());
break}}}c();let g=window.location.pathname.split("/",2)[1];g||(g="students");const h=new WebSocket(("http:"===window.location.protocol?"ws:":"wss:")+"//"+window.location.host+window.location.pathname+"api/wait-for-updates");h.onopen=a=>{console.log("WebSocket opened",a);k.textContent="Aktuell";k.classList.add("online");k.classList.remove("offline")};h.onclose=a=>{console.log("WebSocket closed",a);k.textContent="Keine Verbindung zum Server";k.classList.add("offline");k.classList.remove("online")};
h.onmessage=a=>{a=JSON.parse(a.data);console.log("WebSocket message",a);window.location.reload()};
const k=document.getElementById("online-status"),l=document.getElementById("selectionInput").value,m=document.getElementById("toggle-notifications"),n=document.getElementById("notifications-info"),p=document.getElementById("notifications-info-none"),q=document.getElementById("notifications-info-all"),r=document.getElementById("notifications-info-selection"),t=document.getElementById("notifications-info-blocked"),u=document.getElementById("notifications-info-failed");let v;
function w(a){var d="=".repeat((4-a.length%4)%4);a=(a+d).replace(/-/g,"+").replace(/_/g,"/");a=atob(a);d=new Uint8Array(a.length);for(let e=0;e<a.length;++e)d[e]=a.charCodeAt(e);return d}
function x(a){return new Promise((d,e)=>{v.pushManager.subscribe({userVisibleOnly:!0,applicationServerKey:w("BDu6tTwQHFlGb36-pLCzwMdgumSlyj_vqMR3I1KahllZd3v2se-LM25vhP3Yv_y0qXYx_KPOVOD2EYTaJaibzo8")}).then(f=>{console.log("Got push subscription:",f,a?"(active)":"(not active)");fetch(window.location.origin+window.location.pathname+"api/subscribe-push",{method:"post",headers:{"Content-Type":"application/json"},body:JSON.stringify({subscription:f.toJSON(),selection:l,is_active:a})}).then(a=>a.json()).then(a=>
{a.ok?(console.log("Push subscription successful"),d()):(console.error("Push subscription failed"),e())})}).catch(a=>{console.error("Push subscription failed",a);e(a)})})}let y;
function z(a){console.log("Setting notification-state to",a);y=a;window.localStorage.setItem(g+"-notification-state",y);switch(y){case "granted-and-enabled":m.checked=!0;m.disabled=!1;n.innerHTML=""!==l?r.innerHTML.replace("{selection}",l):q.innerHTML;x(!0).catch(()=>{z("failed")});break;case "denied":m.checked=!1;m.disabled=!0;n.innerHTML=t.innerHTML;break;case "failed":m.checked=!1;m.disabled=!0;n.innerHTML=u.innerHTML;break;case "granted-and-disabled":x(!1).catch(()=>{z("failed")});m.checked=!1;
m.disabled=!1;n.innerHTML=p.innerHTML;break;default:case "default":m.checked=!1,m.disabled=!1,n.innerHTML=p.innerHTML}}
function A(){function a(){return y.startsWith(Notification.permission)?!1:("granted"===Notification.permission?z("granted-and-disabled"):z(Notification.permission),!0)}document.getElementById("notifications-block").hidden=!1;m.addEventListener("change",()=>{m.checked?window.Notification.requestPermission().then(a=>{switch(a){case "granted":y="granted-and-enabled";break;default:y=a}z(y)}):"granted-and-enabled"===y&&z("granted-and-disabled")});window.addEventListener("focus",a);y=window.localStorage.getItem(g+
"-notification-state");a()||(null!=y?z(y):z("default"))}"serviceWorker"in navigator?window.addEventListener("load",()=>{navigator.serviceWorker.register("/sw.min.js").then(a=>{v=a;console.log("ServiceWorker registration successful:",a);"Notification"in window?"localStorage"in window?A():console.warn("localStorage is not supported"):console.warn("Notification is not supported")}).catch(a=>console.warn("ServiceWorker registration failed:",a))}):console.warn("serviceWorker is not supported");//# sourceMappingURL=substitutions.min.js.map
