!function(){"use strict";const i="gawvertretung-v1",e="##empty##"
/*!
default-plan-path
*/,a=[]
/*!
plan-paths
*/,o=""
/*!
plausible-domain
*/,r=""
/*!
plausible-endpoint
*/;function f(e,t){const n={n:e,u:self.location.toString(),d:o,r:null};return t&&t.meta&&(n.m=JSON.stringify(t.meta)),t&&t.props&&(n.p=JSON.stringify(t.props)),fetch(r,{method:"POST",headers:{"Content-Type":"text/plain"},body:JSON.stringify(n)}).catch(e=>console.error("reporting error failed",e))}function t(e,t=null){try{var n=e.name,o=(null==t?void 0:t.message)||e.message,i=e.description,a=e.number,r=(null==t?void 0:t.filename)||e.fileName,s=(null==t?void 0:t.lineno)||e.lineNumber,c=(null==t?void 0:t.colno)||e.columnNumber,l=(null==t?void 0:t.stack)||e.stack,d=(n||"Generic Error")+": "+o,u=l+" - "+r+":"+s+":"+c+" "+i+" "+a;console.log("report error",d,u),f("JavaScript Error (Service Worker)",{props:{[d]:u}})}catch(e){console.error("reporting error failed",e)}}self.addEventListener("error",e=>t(e.error,e)),self.addEventListener("unhandledrejection",e=>t(e.reason));const s=["/assets/style/main.css","/assets/js/substitutions.js","/assets/js/timetables.js","/assets/ferien/style.css","/assets/ferien/script.js"];self.addEventListener("install",e=>{e.waitUntil(caches.open(i).then(n=>Promise.all([Promise.all(a.map(t=>fetch(t+"?all&sw").then(e=>n.put(t,e))))])))}),self.addEventListener("activate",e=>{e.waitUntil(caches.open(i).then(n=>{n.keys().then(e=>Promise.all(e.map(e=>{var t=new URL(e.url);if(!s.includes(t.pathname)&&!a.includes(t.pathname))return console.log("cache: delete old",e),n.delete(e)})))}))}),self.addEventListener("fetch",o=>{const n=new URL(o.request.url);"/"===n.pathname?e:a.includes(n.pathname)?o.respondWith(new Promise((e,t)=>{fetch(o.request).then(t=>{e(t.clone()),caches.open(i).then(e=>e.put(n.pathname,t))},t)}).catch(()=>caches.open(i).then(e=>e.match(n.pathname,{ignoreSearch:!0}).then(e=>e||Promise.reject("no-match"))))):s.includes(n.pathname)&&o.respondWith(new Promise(n=>caches.open(i).then(t=>t.match(o.request).then(e=>{e?n(e):fetch(o.request).then(async e=>{n(e.clone()),await t.delete(o.request,{ignoreSearch:!0,ignoreVary:!0}).then(e=>console.log("deleted",e,o.request.url)),await t.put(o.request,e)}).catch(()=>{n(t.match(o.request,{ignoreSearch:!0,ignoreVary:!0}))})}))))}),self.addEventListener("push",async e=>{if(e.data){var t=e.data.json();if("generic_message"===t.type)e.waitUntil(self.registration.showNotification(t.title,{body:t.body||"",icon:"android-chrome-512x512.png",badge:"monochrome-96x96.png",lang:"de",data:{type:"generic_message"}}));else{let s=t.plan_id,c=t.affected_groups_by_day;console.log("affectedGroups",c);for(var n of Object.values(c))n.groups=new Set(n.groups);let l=Date.now()/1e3;e.waitUntil(self.registration.getNotifications().then(e=>{let t=1;for(var n of e)if(n.data&&n.data.plan_id===s){for(let[t,e]of Object.entries(n.data.affected_groups_by_day))console.log("expiryTime, currentTimestamp:",t,l),t>l&&(console.log("add",e.groups),t in c?e.groups.forEach(e=>c[t].groups.add(e)):(e.groups=new Set(e.groups),c[t]=e));n.close(),n.data.notification_count&&(t+=n.data.notification_count)}for(var o of Object.values(c))o.groups=Array.from(o.groups);let i,a;if(1===Object.keys(c).length){let e=Object.values(c)[0];i=e.name+": Neue Vertretungen",a=e.groups.join(", ")}else{i="Neue Vertretungen",a="";for(var r of Object.values(c))a+=r.name+": "+r.groups.join(", ")+"\n"}e={body:a,icon:"android-chrome-512x512.png",badge:"monochrome-96x96.png",lang:"de",vibrate:[300,100,400],data:{type:"subs_update",plan_id:s,url:new URL("/"+s+"/?source=Notification",self.location.origin).href,affected_groups_by_day:c,notification_count:t}};self.registration.showNotification(i,e),f("Notification",{props:{[s]:"Received"}})}))}}else e.waitUntil(Promise.all([self.registration.showNotification("Neue Benachrichtigung",{icon:"android-chrome-512x512.png",badge:"monochrome-96x96.png",lang:"de"}),f("Notification",{props:{other:"Received, but without Payload"}})]))}),self.addEventListener("notificationclick",e=>{e.notification.close();const i=e.notification.data;i&&"subs_update"===i.type&&e.waitUntil(Promise.all([self.clients.matchAll().then(function(e){var t,n=new URL(i.url);for(t of e){var o=new URL(t.url);if(o.origin+o.pathname===n.origin+n.pathname&&"focus"in t)return f("Notification",{props:{[i.plan_id]:"Clicked ("+i.notification_count+", focus)"}}),t.focus()}if(self.clients.openWindow)return f("Notification",{props:{[i.plan_id]:"Clicked ("+i.notification_count+", open)"}}),self.clients.openWindow(i.url)}),self.registration.getNotifications().then(e=>{e.forEach(e=>{null!=e.data&&e.data.plan_id===i.plan_id&&e.close()})})]))})}();
//# sourceMappingURL=sw.js.map
